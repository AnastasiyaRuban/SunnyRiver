"use strict";

var catalog = [{
  category: "КРЕСЛО-ШЕЗЛОНГ",
  id: "chaise-longue-chair",
  products: [{
    id: 1,
    name: "КРЕСЛА-ШЕЗЛОНГИ",
    price: 3900,
    image: "img/products/chaise-longue-chair.webp",
    description: "Конфеты ручной работы из цельного ядра кедрового ореха с добавлением свежих сибирских ягод (клюква, облепиха, черника, черёмуха) и алтайского мёда, покрытые шоколадной глазурью.",
    "best before date": "6 мес.",
    weight: "120 гр",
    hit: !0
  }]
}, {
  category: "СТОЛИК",
  id: "table",
  products: [{
    id: 1,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "/img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }, {
    id: 2,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }, {
    id: 3,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }, {
    id: 4,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }, {
    id: 5,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }, {
    id: 6,
    name: "МАЛЕНЬКИЙ СТОЛИК",
    price: 1500,
    image: "img/products/small-table.webp",
    description: "Это натуральный продукт, сохранивший все полезные свойства ягод благодаря низкотемпературной сушке (не более 39 °С). Каждая упаковка содержит не менее 600 граммов свежих ягод и фруктов.",
    "best before date": "6 мес.",
    weight: "100 гр"
  }]
}, {
  category: "ОБЕДЕННЫЙ СТОЛ",
  id: "dinner-table",
  products: [{
    id: 1,
    name: "ОБЕДЕННЫЙ СТОЛ",
    price: 5900,
    image: "img/products/dinner-table.webp",
    description: "Урбеч – густая жидкая масса, полученная из растертых поджаренных или просто высушенных семян кедра, льна и кунжута",
    "best before date": "6 мес.",
    weight: "200 мл"
  }, {
    id: 2,
    name: "ОБЕДЕННЫЙ СТОЛ",
    price: 5900,
    image: "img/products/dinner-table.webp",
    description: "Урбеч – густая жидкая масса, полученная из растертых поджаренных или просто высушенных семян кедра, льна и кунжута",
    "best before date": "6 мес.",
    weight: "200 мл"
  }]
}, {
  category: "ПОДСТАВКА ПОД ЦВЕТЫ",
  id: "flower-stand",
  products: [{
    id: 1,
    name: "ПОДСТАВКА ПОД ЦВЕТЫ",
    price: 1200,
    image: "img/products/flower-stang.webp",
    description: []
  }]
}, {
  category: "ПОДСТАВКА ДЛЯ БУТЫЛКИ",
  id: "stand-for-bottle",
  products: [{
    id: 1,
    name: "ПОДСТАВКА ДЛЯ БОЛЬШИХ БУТЫЛОК",
    price: 800,
    image: "img/products/flower-stang.webp",
    "best before date": "8 мес.",
    description: ['Кедровые приправы от эко-фабрики "Сибирский кедр" - это совершенно новый, ни на что не похожий натуральный эко-продукт! Приправы можно использовать как дополнение к основным блюдам, закускам, салатам, так и сладким десертам. Каждая кедровая приправа имеет свой уникальный рецепт от шеф-повара. В кедровых приправах сохранена вся польза кедровых орешек. Оцените неповторимый вкус!'],
    weight: "0гр."
  }]
}];

function createCard(e) {
  var t = document.createElement("div"),
      o = document.createElement("img"),
      c = document.createElement("div"),
      d = document.createElement("h3"),
      r = document.createElement("p"),
      n = document.createElement("div"),
      a = document.createElement("button"),
      i = document.createElement("button");
  return t.classList.add("products__card", "card"), o.classList.add("card__image"), c.classList.add("card__content"), d.classList.add("card__title", "title"), r.classList.add("card__price"), n.classList.add("card__buttons"), a.classList.add("card__button-more", "button-reset"), i.classList.add("card__button-add", "button-reset"), o.src = e.image, e.hasOwnProperty("hit") && t.classList.add("hit"), d.textContent = e.name, r.textContent = "".concat(e.price, " \u0440."), a.textContent = "ПОДРОБНЕЕ", i.textContent = "В КОРЗИНУ", c.append(d, r, n), n.append(a, i), t.append(o, c), a.addEventListener("click", function () {
    return alert("Откроется попап");
  }), i.addEventListener("click", function () {
    return alert("Добавится в корзину");
  }), t;
}

function createCatalogSection() {
  var e = document.querySelector(".products__container");
  catalog.forEach(function (t) {
    var o = document.createElement("div"),
        c = document.createElement("h2");
    blockCards = document.createElement("div"), o.classList.add("products__category", "category"), c.classList.add("category__title", "title"), blockCards.classList.add("category__cards"), o.id = t.id, c.textContent = t.category, o.append(c), t.products.forEach(function (e) {
      var t = createCard(e);
      blockCards.append(t);
    }), o.append(blockCards), e.append(o);
  });
}

function createProductDropdown() {
  var e = document.querySelector(".item-submenu"),
      t = document.createElement("ui");
  t.classList.add("item-submenu__list", "list-reset"), catalog.forEach(function (e) {
    var o = document.createElement("li"),
        c = document.createElement("a");
    o.classList.add("item-submenu__item"), c.classList.add("link-reset", "item-submenu__link"), c.setAttribute("href", "#".concat(e.id)), c.textContent = e.category, o.append(c), t.append(o);
  }), e.append(t);
}

createCatalogSection(), createProductDropdown();
var links = document.querySelectorAll('a[href^="#"]'),
    topOffset = 100;
links.forEach(function (e) {
  e.addEventListener("click", function (e) {
    e.preventDefault();
    var t = this.getAttribute("href").slice(1);
    var o = document.getElementById(t).getBoundingClientRect().top - topOffset;
    window.scrollBy({
      top: o,
      behavior: "smooth"
    });
  });
});
var scrolButton = document.querySelector(".scroll-button");
window.addEventListener("scroll", function () {
  window.pageYOffset > 2e3 ? scrolButton.classList.add("scroll-button-show") : scrolButton.classList.remove("scroll-button-show");
}, !0), scrolButton.addEventListener("click", function () {
  window.scrollTo({
    top: 0,
    behavior: "smooth"
  });
});
var promoClose = document.querySelector(".promo__close"),
    promoBlock = document.querySelector(".promo");
promoClose.addEventListener("click", function () {
  promoBlock.remove();
}), window.onload = function () {
  (function () {
    var e = document.createElement("div");
    e.className = "progress", document.body.prepend(e);

    var t = function t() {
      return e.style.width = Math.floor(window.pageYOffset / (document.documentElement.scrollHeight - window.innerHeight) * 100) + "%";
    };

    t(), document.addEventListener("scroll", throttle(t, 64)), window.addEventListener("resize", throttle(t, 64));
  })();
};

var throttle = function throttle(e, t) {
  var o = !1;
  return function () {
    o || (o = !0, setTimeout(function () {
      e(), o = !1;
    }, t));
  };
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
