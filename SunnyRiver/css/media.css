/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

@media (max-width: 1200px) {
  .header__logo {
    margin-right: 10px;
  }

  .nav__item:not(:last-child) {
    margin-right: 25px;
  }

  .header__social {
    margin-right: 28px;
  }

  .header__tel {
    margin-right: 20px;
  }

  .nav__link {
    font-size: 16px;
  }

  .header__logo {
    margin-right: 10px;
  }

  .nav__item:not(:last-child) {
    margin-right: 25px;
  }

  .header__social {
    margin-right: 28px;
  }

  .header__tel {
    margin-right: 20px;
  }

  .nav__link {
    font-size: 16px;
  }
}

@media (max-width: 1024px) {
  .contacts__container {
    padding-left: 50px;
    padding-right: 50px;
  }
}

@media (max-width: 1000px) {
  .header {
    position: relative;
    background-color: black;
    box-shadow: none;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    height: 64px;
  }

  .header__menu {
    position: absolute;
    top: -100vh;
    padding: 40px;
    left: 0;
    right: 0;
    flex-direction: column;
    transition: all 0.3s ease;
    background-color: white;
  }

  .header__logo {
    margin: 0;
    margin-bottom: 40px;
  }

  .header__feedback {
    flex-direction: column;
  }

  .header__tel,
  .header__social {
    margin-right: 0;
    margin-bottom: 20px;
  }

  .item-submenu:hover > .item-submenu__list,
  .item-submenu__list:hover {
    z-index: 5;
    left: -63%;
    top: 33px;
  }

  .nav {
    margin-bottom: 40px;
    margin-right: 0;
  }

  .nav__list {
    flex-direction: column;
    width: 100%;
  }

  .nav__item:not(:last-child) {
    margin-right: 0;
    margin-bottom: 20px;
  }

  .nav__item {
    text-align: center;
  }

  .item-submenu__button {
    transform: translateX(10px);
  }

  .burger {
    position: absolute;
    display: block;
    width: 28px;
    height: 20px;
  }

  .burger::after,
  .burger::before,
  .burger__line {
    content: "";
    width: 100%;
    height: 3px;
    background-color: #fff;
    position: absolute;
    left: 0;
    transition: all 0.3s ease-in-out;
  }

  .burger__line {
    top: 43%;
  }

  .burger::after {
    bottom: 0;
  }

  .burger::before {
    top: 0;
  }

  .burger.active + .header__menu {
    top: 100%;
  }

  .burger.active::after {
    transform: rotate(45deg);
    bottom: 8px;
  }

  .burger.active::before {
    transform: rotate(-45deg);
    top: 8px;
  }

  .burger.active .burger__line {
    width: 0;
  }

  .header {
    position: relative;
    background-color: black;
    box-shadow: none;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    height: 64px;
  }

  .header__menu {
    position: absolute;
    top: -100vh;
    padding: 40px;
    left: 0;
    right: 0;
    flex-direction: column;
    transition: all 0.3s ease;
    background-color: white;
  }

  .header__logo {
    margin: 0;
    margin-bottom: 40px;
  }

  .header__feedback {
    flex-direction: column;
  }

  .header__tel,
  .header__social {
    margin-right: 0;
    margin-bottom: 20px;
  }

  .item-submenu:hover > .item-submenu__list,
  .item-submenu__list:hover {
    z-index: 5;
    left: -63%;
    top: 33px;
  }

  .nav {
    margin-bottom: 40px;
    margin-right: 0;
  }

  .nav__list {
    flex-direction: column;
    width: 100%;
  }

  .nav__item:not(:last-child) {
    margin-right: 0;
    margin-bottom: 20px;
  }

  .nav__item {
    text-align: center;
  }

  .item-submenu__button {
    transform: translateX(10px);
  }

  .burger {
    position: absolute;
    display: block;
    width: 28px;
    height: 20px;
  }

  .burger::after,
  .burger::before,
  .burger__line {
    content: "";
    width: 100%;
    height: 3px;
    background-color: #fff;
    position: absolute;
    left: 0;
    transition: all 0.3s ease-in-out;
  }

  .burger__line {
    top: 43%;
  }

  .burger::after {
    bottom: 0;
  }

  .burger::before {
    top: 0;
  }

  .burger.active + .header__menu {
    top: 100%;
  }

  .burger.active::after {
    transform: rotate(45deg);
    bottom: 8px;
  }

  .burger.active::before {
    transform: rotate(-45deg);
    top: 8px;
  }

  .burger.active .burger__line {
    width: 0;
  }

  .products__container {
    max-width: 640px;
    padding: 0;
    padding-top: 80px;
    padding-bottom: 85px;
  }
}